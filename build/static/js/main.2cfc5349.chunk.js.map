{"version":3,"sources":["component/Book.js","component/BookList.js","BooksAPI.js","component/SearchBook.js","App.js","index.js"],"names":["Book","onChange","event","_this","props","moveBook","book","target","value","authors","url","this","join","_unused","imageLinks","thumbnail","smallthumbnail","err","console","log","react_default","a","createElement","className","style","width","height","backgroundImage","concat","defaultValue","shelf","disabled","title","Component","BookList","books","filter","b","map","component_Book","key","id","react_router_dom","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","Search","state","bookToShow","searchBooks","_callee","shelfBooks","regenerator_default","wrap","_context","prev","next","BooksAPI","sent","some","find","x","setState","t0","alert","message","stop","_this2","type","placeholder","App","changeBook","found","i","length","toConsumableArray","_this3","react_router","exact","path","render","component_BookList","SearchBook","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2cfc5349.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Book extends Component {\n    onChange = (event) => {\n        this.props.moveBook(this.props.book, event.target.value);\n    };\n    render() {\n        let authors = \"\";\n        let url = \"\";\n        try {\n            authors = this.props.book.authors.join(\",\");\n        } catch {\n            authors = \"\";\n        }\n        try {\n            url = this.props.book.imageLinks.thumbnail ? this.props.book.imageLinks.thumbnail : this.props.book.imageLinks.smallthumbnail;\n        } catch (err) {\n            console.log(\"No books to show\");\n        }\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div\n                            className=\"book-cover\"\n                            style={{\n                                width: 128,\n                                height: 193,\n                                backgroundImage: `url(\"${url}\")`,\n                            }}\n                        />\n                        <div className=\"book-shelf-changer\">\n                            <select defaultValue={this.props.book.shelf ? this.props.book.shelf : \"none\"} onChange={this.onChange}>\n                                <option value=\"move\" disabled>\n                                    Move to...\n                                </option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{this.props.book.title}</div>\n                    <div className=\"book-authors\">{authors}</div>\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default Book;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nclass BookList extends Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n    };\n\n   \n    render() {\n        const { books } = this.props;\n        return (\n            <div className=\"app\">\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                        <h1>MyReads</h1>\n                    </div>\n                    <div className=\"list-books-content\">\n                        <div>\n                            <div className=\"bookshelf\">\n                                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                                <div className=\"bookshelf-books\">\n                                    <ol className=\"books-grid\">\n                                        {books\n                                            .filter((b) => b.shelf === \"currentlyReading\")\n                                            .map((b) => (\n                                                <Book book={b} key={b.id} moveBook ={this.props.moveBook}/>\n                                            ))}\n                                    </ol>\n                                </div>\n                            </div>\n                            <div className=\"bookshelf\">\n                                <h2 className=\"bookshelf-title\">Want to Read</h2>\n                                <div className=\"bookshelf-books\">\n                                    <ol className=\"books-grid\">\n                                        {books\n                                            .filter((b) => b.shelf === \"wantToRead\")\n                                            .map((b) => (\n                                                <Book book={b} key={b.id} moveBook ={this.props.moveBook}/>\n                                            ))}\n                                    </ol>\n                                </div>\n                            </div>\n                            <div className=\"bookshelf\">\n                                <h2 className=\"bookshelf-title\">Read</h2>\n                                <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                        {books\n                                            .filter((b) => b.shelf === \"read\")\n                                            .map((b) => (\n                                                <Book book={b} key={b.id} moveBook={this.props.moveBook}/>\n                                            ))}\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Link to=\"/store\" className=\"open-search\">\n                        <button>Add a book</button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookList;\n","const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token)\n    token = localStorage.token = Math.random()\n        .toString(36)\n        .substr(-8);\n\nconst headers = {\n    Accept: \"application/json\",\n    Authorization: token,\n};\n\nexport const get = (bookId) =>\n    fetch(`${api}/books/${bookId}`, { headers })\n        .then((res) => res.json())\n        .then((data) => data.book);\n\nexport const getAll = () =>\n    fetch(`${api}/books`, { headers })\n        .then((res) => res.json())\n        .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n    fetch(`${api}/books/${book.id}`, {\n        method: \"PUT\",\n        headers: {\n            ...headers,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ shelf }),\n    }).then((res) => res.json());\n\nexport const search = (query) =>{\n    if(query){\n        return fetch(`${api}/search`, {\n            method: \"POST\",\n            headers: {\n                ...headers,\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ query }),\n        })\n        .then((res) => res.json())\n        .then((data) => data.books);\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass Search extends Component {\n    state = {\n        bookToShow: [],\n    };\n    searchBooks = async (query) => {\n        try {\n            const books = await BooksAPI.search(query);\n\n            let shelfBooks = books\n                ? books.map((book) => {\n                      if (this.props.books.some((b) => b.id === book.id)) {\n                          book.shelf = this.props.books.find((x) => x.id === book.id).shelf;\n                      }\n                      return book;\n                  })\n                : [];\n            this.setState({\n                bookToShow: shelfBooks,\n            });\n        } catch (err) {\n            alert(err.message);\n        }\n    };\n    render() {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\">\n                        Close\n                    </Link>\n                    {/* <button className=\"close-search\">Close</button> */}\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by title or author\"\n                            onChange={(event) => this.searchBooks(event.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {this.state.bookToShow.map((book) => (\n                            <Book moveBook={this.props.moveBook} key={book.id} book={book} />\n                        ))}\n                    </ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport BookList from \"./component/BookList\";\nimport Search from \"./component/SearchBook\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\n\nclass App extends Component {\n    state = {\n        books: [],\n    };\n    componentDidMount() {\n        BooksAPI.getAll().then((books) => {\n            this.setState(() => ({\n                books,\n            }));\n        });\n    }\n    changeBook = async (book, shelf) => {\n        await BooksAPI.update(book, shelf).then((res) => {\n            var found = false;\n            for (let i = 0; i < this.state.books.length; i++) {\n                if (this.state.books[i].id === book.id) {\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                this.setState({\n                    books: this.state.books.map((Book) => {\n                        if (Book.id === book.id) {\n                            Book.shelf = shelf;\n                        }\n                        return Book;\n                    }),\n                });\n            } else {\n                book.shelf = shelf;\n                this.setState({\n                    books: [...this.state.books, book],\n                });\n            }\n        });\n    };\n    render() {\n        return (\n            <div>\n                <Route exact path=\"/\" render={() => <BookList books={this.state.books} moveBook={this.changeBook} />}/>\n                \n                \n                <Route path=\"/store\" render={() => <Search  books={this.state.books} moveBook={this.changeBook} />} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}